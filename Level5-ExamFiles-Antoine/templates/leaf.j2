{# This is the leaf template #}
{# This is for EVPN #}

service routing protocols model multi-agent

{# This section is static, no need to modify#}

ip prefix-list LOOPBACK
    seq 10 permit 10.1.0.0/24 eq 32
    seq 20 permit 10.1.1.0/24 eq 32
    seq 30 permit 10.2.0.0/24 eq 32
    seq 40 permit 10.2.1.0/24 eq 32

route-map LOOPBACK permit 10
   match ip address prefix-list LOOPBACK

{# Pull the ASN and router-id from the underlay.yml file #}

router bgp {{ underlay[inventory_hostname]['BGP']['ASN'] }}
   router-id {{ underlay[inventory_hostname]['interfaces']['loopback0']['ipv4'] }}
   no bgp default ipv4-unicast
   maximum-paths 3
   distance bgp 20 200 200

{# This is the connection to the spines#}

   neighbor SPINE_Underlay peer group  
   neighbor SPINE_Underlay remote-as {{ underlay[inventory_hostname]['BGP']['spine-ASN'] }}
   neighbor SPINE_Underlay send-community
   neighbor SPINE_Underlay maximum-routes 12000

{# This is the connection to the leaf peer #}

   neighbor LEAF_Peer peer group
   neighbor LEAF_Peer remote-as {{ underlay[inventory_hostname]['BGP']['ASN'] }}
   neighbor LEAF_Peer next-hop-self
   neighbor LEAF_Peer maximum-routes 12000


{# This must be a loop, preferably a "for" loop, to put the neighbor relationships in #}
{% for peer in underlay[inventory_hostname]['BGP']['spine-peers'] %}
   neighbor {{ peer }} peer group SPINE_Underlay
{% endfor %}
{# This is a conditional (if statements), if the switch is "Odd" the neighbor is 192.168.255.2, if it's even the neighbor is 192.168.255.1 #}

{% if 'Odd' in underlay[inventory_hostname]['MLAG'] %}
   neighbor 192.168.255.2 peer group LEAF_Peer
{% elif 'Even' in underlay[inventory_hostname]['MLAG'] %}
   neighbor 192.168.255.1 peer group LEAF_Peer
{% endif %}
{# Added configuration for EVPN #}
  neighbor EVPN peer group
 
     neighbor EVPN remote-as {{ underlay['global']['DC2']['spine_ASN']}} 
  
     neighbor EVPN update-source Loopback0
     neighbor EVPN ebgp-multihop 3
     neighbor EVPN send-community 
     neighbor EVPN maximum-routes 0

{% for peer in underlay[inventory_hostname]['BGP']['spine-overlay'] %}
   neighbor {{ peer }} peer group EVPN
{% endfor %}  
 
   address-family evpn
     neighbor EVPN activate

{# This part is static and you don't need to change #}
   
   redistribute connected route-map LOOPBACK
   address-family ipv4
     neighbor SPINE_Underlay activate
     neighbor LEAF_Peer activate
     redistribute connected route-map LOOPBACK

{# Added configuration for VXLAN #}
{# Create VRFs#}
{% for tenant in underlay['global']['DC2']['tenants'] %}
  vrf instance {{ tenant }}
  ip routing vrf {{ tenant }}
{% endfor %}

{# Create VLANs#}
{% for tenant in underlay['global']['DC2']['tenants'] %}
{% for l2vni in underlay['global']['DC2']['tenants'][tenant]['L2VNI'] %}
  vlan {{ underlay['global']['DC2']['tenants'][tenant]['L2VNI'][l2vni]['VLAN'] }}
{% endfor %}
{% endfor %}

{# Create SVIs#}
{% for tenant in underlay['global']['DC2']['tenants'] %}
{% for l2vni in underlay['global']['DC2']['tenants'][tenant]['L2VNI'] %}
interface vlan {{underlay['global']['DC2']['tenants'][tenant]['L2VNI'][l2vni]['VLAN']}}
  ip address virtual {{ underlay['global']['DC2']['tenants'][tenant]['L2VNI'][l2vni]['SVI'] }}
{% endfor %}
{% endfor %}

{# Configure VXLAN #}
interface vxlan1
  vxlan source-interface Loopback1
  vxlan udp-port 4789
{% for tenant in underlay['global']['DC2']['tenants'] %}
  vxlan vrf {{ tenant }} vni {{ underlay['global']['DC2']['tenants'][tenant]['L3VNI'] }}
{% endfor %}

{% for tenant in underlay['global']['DC2']['tenants'] %}
{% for l2vni in underlay['global']['DC2']['tenants'][tenant]['L2VNI'] %}
  vxlan vlan {{ underlay['global']['DC2']['tenants'][tenant]['L2VNI'][l2vni]['VLAN'] }} vni {{ underlay['global']['DC2']['tenants'][tenant]['L2VNI'][l2vni]['VNID'] }}
{% endfor %}
{% endfor %}


router bgp {{ underlay[inventory_hostname]['BGP']['ASN'] }}

{% for tenant in underlay['global']['DC2']['tenants'] %}
  vrf {{ tenant }}
    rd {{ underlay[inventory_hostname]['interfaces']['loopback1']['ipv4'] }}:{{ underlay['global']['DC2']['tenants'][tenant]['L3VNI'] }}
    route-target import evpn {{ underlay['global']['DC2']['tenants'][tenant]['L3VNI'] }}:{{ underlay['global']['DC2']['tenants'][tenant]['L3VNI'] }}
    route-target export evpn {{ underlay['global']['DC2']['tenants'][tenant]['L3VNI'] }}:{{ underlay['global']['DC2']['tenants'][tenant]['L3VNI'] }}
{% endfor %}

{% for tenant in underlay['global']['DC2']['tenants'] %}
{% for l2vni in underlay['global']['DC2']['tenants'][tenant]['L2VNI'] %}
  vlan {{ underlay['global']['DC2']['tenants'][tenant]['L2VNI'][l2vni]['VLAN'] }}
    rd auto
    route-target both {{ underlay['global']['DC2']['tenants'][tenant]['L2VNI'][l2vni]['VNID'] }}:{{ underlay['global']['DC2']['tenants'][tenant]['L2VNI'][l2vni]['VNID'] }}
    redistribute learned
{% endfor %}
{% endfor %}